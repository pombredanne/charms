#!/bin/bash
LOG=/var/log/pam_script.log

if which cgcreate 1> /dev/null 2>&1
then
  # Total limit over all processes in the cgroup
  MemoryLimit=$((512*1024*1024))

  echo "$PAM_USER login" >> $LOG

  # Check we're running as a databox (primary group), we don't want to accidentally
  # put our terminal into a cgroup (or create mounts that are meaningless)
  groups=$(id -Gn "$PAM_USER")
  if [ "${groups#databox}" == "$groups" ]
  then
    echo "$PAM_USER ignored" >> $LOG
    exit 0
  fi

  mkdir -p /jails/$PAM_USER > /dev/null 2>&1

  if [ ! -d /sys/fs/cgroup/cpu/$PAM_USER ]
  then
    cgcreate -t $PAM_USER -g memory,cpu,cpuacct:$PAM_USER
  fi

  echo $MemoryLimit > /sys/fs/cgroup/memory/$PAM_USER/memory.limit_in_bytes

  # CPU share is form of priority. By specifying a low number here, we
  # ensure that important system services get a higher share of the CPU
  # and thus remain responsive.
  Priority=12
  echo $Priority > /sys/fs/cgroup/cpu/$PAM_USER/cpu.shares

  # 13/07/30 Peter and Chris thought about this and decided that it isn't
  # desirable. It may turn out to be useful later, but not set in this manner.

  # CpuTime=100000
  # CpuPeriod=100000
  # echo $CpuPeriod > /sys/fs/cgroup/cpu/$PAM_USER/cpu.cfs_period_us
  # echo $CpuTime > /sys/fs/cgroup/cpu/$PAM_USER/cpu.cfs_quota_us

  # Put the owning process (usually the "su -l" or cron child process)
  # into the cgroup (and therefore all of its future children)
  echo $PPID > /sys/fs/cgroup/cpu/$PAM_USER/tasks
  echo $PPID > /sys/fs/cgroup/memory/$PAM_USER/tasks
  echo $PPID > /sys/fs/cgroup/cpuacct/$PAM_USER/tasks
fi

make_mount () {
  mount --no-mtab --bind "$@"
} >> $LOG 2>&1

JAILPATH="/jails/$PAM_USER"

make_mount --bind /opt/basejail             ${JAILPATH}
make_mount --bind /var/spool/cron/crontabs  ${JAILPATH}/var/spool/cron/crontabs
make_mount --bind /ebs/home/$PAM_USER       ${JAILPATH}/home
make_mount --bind /dev                      ${JAILPATH}/dev
make_mount --bind /dev/pts                  ${JAILPATH}/dev/pts
make_mount --bind /proc                     ${JAILPATH}/proc
